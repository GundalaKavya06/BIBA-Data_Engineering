CREATE DATABASE SQL_ASSESSMENT;
USE SQL_ASSESSMENT;
/*ORDERS TABLES*/
CREATE TABLE ORDERS ( ORDER_NO INT NOT NULL, CUSTOMER_ID INT, DELIVERED_DATE VARCHAR(10));

INSERT INTO ORDERS (ORDER_NO, CUSTOMER_ID, DELIVERED_DATE) VALUES
(121, 24, '23-10-2023'),
(122, 23, '12-11-2023'),
(123, 12, '17-11-2023'),
(125, 56, '07-12-2023');



SELECT * FROM ORDERS;

/*CUSTOMERS TABLE*/
CREATE TABLE CUSTOMERS ( CUSTOMER_ID INT NOT NULL, CUSTOMER_NAME VARCHAR(10),CUSTOMER_CONTACT INTEGER, CUSTOMER_ADDRESS VARCHAR(20));  

INSERT INTO CUSTOMERS (CUSTOMER_ID , CUSTOMER_NAME, CUSTOMER_CONTACT,CUSTOMER_ADDRESS) VALUES
(12, 'AYISHA', 1234, 'HYDERABAD'),
(23, 'ZOYA', 6789, 'VIZAG'),
(24, 'KEERTHI', 4567, 'VIJAYAWADA'),
(56, 'RITU', 2345, 'VIZIANAGARAM'),
(17, 'ANJALI', 3784, 'CHENNAI'),
(78, 'HEERA', 7228, 'PUNE'),
(34, 'GEETA', 3483, 'BANGLORE');

/*1.Querying Data by Using Joins and Subqueries*/


/*INNER- JOIN*/
SELECT O.ORDER_NO,O.CUSTOMER_ID,C.CUSTOMER_NAME, C.CUSTOMER_CONTACT, C.CUSTOMER_ADDRESS
FROM ORDERS AS O
INNER JOIN CUSTOMERS AS C
ON O.CUSTOMER_ID = C.CUSTOMER_ID;

/*LEFT JOIN*/
SELECT O.ORDER_NO,O.CUSTOMER_ID,C.CUSTOMER_NAME, C.CUSTOMER_CONTACT, C.CUSTOMER_ADDRESS
FROM ORDERS AS O
LEFT JOIN CUSTOMERS AS C
ON O.CUSTOMER_ID = C.CUSTOMER_ID
ORDER BY C.CUSTOMER_ID;

/*RIGHT JOIN*/
SELECT O.ORDER_NO,O.CUSTOMER_ID,C.CUSTOMER_NAME, C.CUSTOMER_CONTACT, C.CUSTOMER_ADDRESS
FROM ORDERS AS O
RIGHT JOIN CUSTOMERS AS C
ON O.CUSTOMER_ID = C.CUSTOMER_ID;

/*FULL JOIN*/
SELECT O.ORDER_NO,O.CUSTOMER_ID,C.CUSTOMER_NAME, C.CUSTOMER_CONTACT, C.CUSTOMER_ADDRESS
FROM ORDERS AS O
FULL JOIN CUSTOMERS AS C
ON O.CUSTOMER_ID = C.CUSTOMER_ID;

/*EQUI JOIN*/
SELECT ORDERS.ORDER_NO, ORDERS.CUSTOMER_ID, CUSTOMERS.CUSTOMER_NAME, CUSTOMERS.CUSTOMER_ADDRESS
FROM ORDERS  
JOIN CUSTOMERS
ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID;

/*NON-EQUI JOIN*/
SELECT ORDERS.ORDER_NO, ORDERS.CUSTOMER_ID, CUSTOMERS.CUSTOMER_NAME, CUSTOMERS.CUSTOMER_ADDRESS
FROM ORDERS  
JOIN CUSTOMERS
ON ORDERS.CUSTOMER_ID <= CUSTOMERS.CUSTOMER_ID;


/*SUB-QUERIES*/
SELECT C.CUSTOMER_NAME, C.CUSTOMER_ID
FROM CUSTOMERS AS C
WHERE CUSTOMER_ID IN( 
SELECT O.CUSTOMER_ID FROM ORDERS AS O
WHERE CUSTOMER_ID BETWEEN 11 AND 24);


/*2. Manipulate data by using sql commands using groupby and having clause.*/
CREATE TABLE STUDENTS ( ID INT NOT NULL, NAME VARCHAR(10), GRADES DECIMAL, RESULT VARCHAR(6));

INSERT INTO STUDENTS (ID, NAME, GRADES, RESULT) VALUES
(1,'PREETI',56,'PASS'),
(2,'SRUTHI',78,'PASS'),
(3,'YASH',67,'PASS'),
(4,'KRITHI',34,'FAIL'),
(5,'RAVI',54,'PASS'),
(6,'VEER',87,'PASS'),
(7,'THILAK',23,'FAIL'),
(8,'KRISH',67,'PASS'),
(9,'LIKKI',16,'FAIL');

/*DML COMMANDS - SELECT, INSERT, UPDATE, DELETE*/

SELECT *  FROM STUDENTS;

INSERT INTO STUDENTS VALUES(11,'RISHI',26,'FAIL');

UPDATE STUDENTS SET RESULT='FAIL' WHERE GRADES <60;

DELETE FROM STUDENTS WHERE NAME='LIKKI';

/*DDL COMMANDS - CREATE, ALTER, DROP*/

ALTER TABLE STUDENTS
ALTER COLUMN GRADES INT;

/*DROP TABLE STUDENTS;*/

/*GROUP BY, HAVING, ORDER BY*/

SELECT COUNT(GRADES) AS TOTAL_RESULT , RESULT
FROM STUDENTS
GROUP BY RESULT
HAVING COUNT(GRADES) >= 1;

SELECT ID, NAME, RESULT
FROM STUDENTS
ORDER BY ID;